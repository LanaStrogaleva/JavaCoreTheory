package org.example.exeptions;
/**
 * Класс <b>ThrowThrowsExample</b> демонстрирует создание и использование пользовательского исключения
 * в Java, а также использование ключевых слов throw и throws.
 *
 * <p>Вложенный класс CustomException является пользовательским исключением, расширяющим стандартный класс Exception.
 * Он обеспечивает возможность генерировать исключения с конкретными сообщениями об ошибках.</p>
 *
 * <p>Метод main содержит блок try-catch для демонстрации выбрасывания и обработки исключения CustomException.
 * Ключевое слово throw используется для генерации исключения, а ключевое слово throws указывает,
 * что метод может выбросить исключение.</p>
 *
 * <p>Метод validateNumber использует throw для генерации CustomException, если проверяемое условие не выполняется.
 * Аннотация @SuppressWarnings("ALL") подавляет предупреждения компилятора для всего кода класса,
 * что может быть полезно в некоторых сценариях, но следует использовать с осторожностью.</p>
 *
 * <p>Этот пример является полезным ресурсом для понимания, как создавать и использовать собственные классы исключений,
 * а также управлять исключениями в Java.</p>
 */
public class ThrowThrowsExample {
}
