package org.example.exeptions;
/**
 * Класс <b>UserRegistrationDemo</b> демонстрирует различие между проверяемыми (checked) и непроверяемыми (unchecked)
 * исключениями в Java. Этот класс моделирует процесс регистрации пользователя и использует проверяемые исключения
 * для валидации данных пользователя и непроверяемые исключения для обработки ошибок, связанных с базой данных.
 *
 * <p>В классе определены два типа исключений:</p>
 * <ul>
 *     <li><i>InvalidDataException</i> - проверяемое исключение, предназначенное для обработки ошибок валидации данных.</li>
 *     <li><i>DatabaseRuntimeException</i> - непроверяемое исключение, представляющее ошибки, связанные с базой данных.</li>
 * </ul>
 *
 * <p>Метод <i>registerUser</i> в классе <i>UserRegistration</i> использует проверяемое исключение InvalidDataException
 * для индикации невалидных данных. Метод <i>simulateDatabaseError</i> генерирует непроверяемое исключение DatabaseRuntimeException,
 * имитируя ситуацию ошибки в работе с базой данных.</p>
 *
 * <p>Пример в методе main демонстрирует обработку этих исключений. Проверяемое исключение должно быть либо перехвачено в блоке catch,
 * либо объявлено в сигнатуре метода с помощью ключевого слова throws, в то время как непроверяемое исключение может быть перехвачено,
 * но не требует объявления в сигнатуре метода.</p>
 *
 * <p>Этот класс является полезным ресурсом для понимания работы с разными типами исключений в Java и их практического использования
 * для обработки ошибок в приложениях.</p>
 */
public class UserRegistrationDemo {
}
