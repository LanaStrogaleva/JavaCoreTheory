package org.example.collections;
/**
 * Класс <b>GenericAdvanced</b> демонстрирует продвинутое использование дженериков в Java,
 * особенно в контексте коллекций и методов с ограниченными параметрами (wildcards).
 *
 * <p>В методе main создаются две коллекции: одна для Integer и другая для Number.
 * Это демонстрирует, как дженерики обеспечивают строгую типизацию коллекций, позволяя хранить
 * элементы конкретного типа данных.</p>
 *
 * <p>Класс CollectionUtils содержит два статических универсальных метода, демонстрирующих использование
 * ограниченных параметров (wildcards) в дженериках. Метод printCollection использует верхнюю границу (upper-bounded wildcard),
 * что позволяет печатать коллекции любого типа, производного от T. Метод mergeCollections использует нижнюю границу (lower-bounded wildcard),
 * что позволяет объединять коллекции, в которых тип данных является супертипом для T.</p>
 *
 * <p>Эти методы демонстрируют гибкость и мощь дженериков в Java, позволяя разрабатывать универсальные методы,
 * способные работать с широким диапазоном типов данных.</p>
 */
public class GenericAdvanced {
}
